{"version":3,"sources":["model/Subject.ts","reportWebVitals.ts","model/JsonManager.ts","component/EditForm.tsx","model/SubjectsManager.ts","component/TimeTableCell.tsx","component/TimeTable.tsx","component/Counter.tsx","component/semsterTab.tsx","component/Title.tsx","App.tsx","index.tsx"],"names":["ECategory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Subject","name","time","color","degree","category","this","filter","item","every","num","push","STORAGE_NAME","headers","colorList","toNameList","Object","keys","forEach","EditForm","prop","useContext","formContext","selectedSubject","setSubject","TimeTable","setTimeTable","Clear","id","isRegistered","tempName","tempDegree","tempColor","tempCategory","None","onChanged","e","target","value","className","Math","floor","type","onChange","checked","selectOption","manager","GetSubjectList","semester","map","key","SubjectName","Categories","idx","onClick","preventDefault","ChangeSubject","GetTimeTable","DeleteSubject","alert","some","undefined","RegisterSubject","defaultSub","SubjectManager","categories","timeTable","SaveTimeTable","tableList","json","JSON","stringify","table","Array","length","subject","Time","Color","Degree","Category","localStorage","setItem","SaveSubjects","subjects","i","getItem","subjectList","parse","list","registerdList","sub","GetSubjects","checeked","countType","CountSemesterDegree","str","parseInt","Number","専門その他","slice","ReduceTime","window","confirm","ChangeData","isNew","console","log","find","x","AddTime","TableCell","props","style","background","height","times","TimeTables","semesterTabContext","Semester","setSemester","useEffect","setDataForm","idstr","currentTarget","dataset","canEdit","head","idx1","data","idx2","Counter","React","useState","displayType","SetType","counts","CountDegree","document","documentElement","setProperty","htmlFor","count","semesters","selectedStyle","defaultStyle","backgroud","SemesterTab","seme","toString","Title","createContext","addEventListener","App","registered","formValue","Provider","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.25e49f7c.chunk.js","sourcesContent":["//import react from \"react\";\n\n\nexport default class Subject {\n    constructor(private name:string, private time:number[], private color:string, private degree:number, private category:ECategory) {};\n\n    get SubjectName() :string\n    {\n        return this.name;\n    }\n    get Time() :number[] {\n        return this.time;\n    }\n\n    get Color() :string {\n        return this.color;\n    } \n     \n    get Degree() :number {\n        return this.degree;\n    }\n\n    get Category() :ECategory {\n        return this.category;\n    }\n\n    ChangeData(name:string, color:string, degree:number, category:ECategory): void {\n        this.name = name;\n        this.degree = degree;\n        this.color = color;\n        this.category = category;\n    }\n\n    ReduceTime(time: number){\n        this.time = this.time.filter(item => item !== time);\n    }\n\n    AddTime(time :number) {\n        if(this.time.every(num => num !== time)) this.time.push(time);\n    }\n\n    Clone() :Subject {\n        return new Subject(this.name, this.time, this.color, this.degree, this.category);\n    }\n};\n\nexport enum ECategory {\n    None,\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    \"専門その他\",\n    \"英語\",\n    \"基盤教養\",\n    \"専門基礎\",\n    \"その他\",\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Subject, { ECategory } from \"./Subject\";\ntype parseSubject = {\n        time : number[],\n        name : string,\n        color : string,\n        degree :number,\n        category : ECategory\n}\nconst STORAGE_NAME = \"subjects\";\n\nexport default function SaveSubjects (tableList: Subject[][]) {\n    // eslint-disable-next-line\n    let json = JSON.stringify(\n        tableList.map(table => {\n            let isRegistered = new Array<boolean>(table.length);\n            return table.map((subject, id)=>{\n                if(!(subject === undefined) && !isRegistered[id] && subject.SubjectName !== \"\") {\n                    subject.Time.forEach(time => {isRegistered[time] = true});\n                    return {\n                        \"time\" : subject.Time,\n                        \"name\" : subject.SubjectName,\n                        \"color\": subject.Color,\n                        \"degree\": subject.Degree,\n                        \"category\": subject.Category,\n                    }\n                }\n            }).filter(subject => subject != null);\n        }).filter(subject => subject != null)\n    );\n    localStorage.setItem(STORAGE_NAME, json);\n}\n\nexport function GetSubjects() : Subject[][] {\n    const CELL_MAX = 10* (5 + 1);\n    const SEMESTER_NUM = 8\n    var subjects :Array<Array<Subject>> = new Array(SEMESTER_NUM);\n    for (let i=0; i< subjects.length; i++) {\n        subjects[i] = new Array<Subject>();\n    }\n    var json:string = localStorage.getItem(STORAGE_NAME) ?? \"null\";\n    var subjectList :parseSubject[][] = JSON.parse(json) as parseSubject[][];\n    subjectList?.forEach((list, idx) => {\n        var registerdList : boolean[] = new Array(CELL_MAX);\n        registerdList = registerdList.map(item => false);\n        if(list.length > 0) {\n            list.forEach(item => {\n                var sub = new Subject(item.name, item.time, item.color, item.degree, item.category);\n                sub.Time.forEach((time)=>{\n                    subjects[idx][time] = sub;\n                    registerdList[time] = true;\n                })\n            });\n        }\n    })\n    return subjects;\n}","import React, {useContext} from \"react\";\nimport { ECategory } from \"../model/Subject\";\nimport { formContext, manager } from \"../App\";\n\n\nconst headers = [\"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\nexport const colorList: {[name:string] : string} = {\n    \"黄色\" : \"#FFFF66\",\n    \"水色\" : \"#99FFFF\",\n    \"ピンク\": \"#FFAAFF\",\n    \"緑色\"  : \"#93FFAB\",\n    \"青色\" : \"#75A9FF\",\n    \"灰色\" : \"#BBBBBB\",\n    \"赤色\": \"#FF5190\",\n    \"オレンジ\" : \"#FFCC66\",\n    \"紫色\" : \"#DCC2FF\",\n    \"黄緑色\" : \"#CCFF00\",\n  };\nexport const toNameList: {[name:string] : string} = {};\nObject.keys(colorList).forEach(name => { \n        toNameList[colorList[name]] = name;\n  });\ninterface IProp {\n    semester : number\n}\n\n\nconst EditForm :React.FC<IProp> = (prop :IProp) =>{\n    const {selectedSubject, setSubject, TimeTable, setTimeTable} = useContext(formContext);\n\n    // 値をリセット\n    const Clear = () => {\n        setSubject({\n            ...selectedSubject,\n            id : selectedSubject.id,\n            isRegistered: false,\n            tempName: \"\",\n            tempDegree : 2,\n            tempColor : \"\",\n            tempCategory : ECategory.None,\n        });\n    }\n\n    // 科目の削除\n    const DeleteSubject = () => {\n        manager.DeleteSubject( prop.semester, selectedSubject.id);\n        setTimeTable(manager.GetTimeTable(prop.semester));\n    };\n\n    // 値の変化時\n    const onChanged= (e :(React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLSelectElement>))=>{\n        const name :string = e.target.name;\n        let value = e.target.value;\n        if(name == \"tempCategory\" && e.target.value === \"\") {\n            value = \"None\";\n        }\n        setSubject({\n            ...selectedSubject,\n           [name] : value\n        });\n    }\n\n    // 科目情報の変更\n    const onSubmit = (e: React.FormEvent) =>{\n        e.preventDefault();\n        manager.ChangeSubject(prop.semester, selectedSubject.id, selectedSubject.tempName, selectedSubject.tempColor, selectedSubject.tempDegree, selectedSubject.tempCategory);\n        setTimeTable(manager.GetTimeTable(prop.semester));\n        \n    }\n\n    const IsProperInput = ()  :boolean => {\n        if(selectedSubject.tempName == null || selectedSubject.tempName === \"\") {\n            alert(\"科目名を入力してください。\");\n            return false;\n        }\n        if(TimeTable.some(item => item != undefined && item != null && item.SubjectName === selectedSubject.tempName)) {\n            alert(\"その科目名は既に登録されています。\\n既存の項目から登録してください。\");\n            return false;\n        }\n        if(selectedSubject.tempColor == null || selectedSubject.tempColor === \"\") {\n            alert(\"科目の色を選択してください。\");\n            return false;\n        }\n        if(selectedSubject.tempDegree == null || selectedSubject.tempDegree <= 0) {\n            alert(\"単位数を選択してください\");\n            return false;\n        }\n        if(selectedSubject.tempCategory == null || selectedSubject.tempCategory == ECategory.None) {\n            alert(\"カテゴリを選択してください\");\n            return false;\n        }\n        return true;\n    }\n\n    const RegisterSubject =() =>{\n        if(!IsProperInput()) {\n            return;\n        }\n        manager.RegisterSubject(prop.semester, selectedSubject.id, selectedSubject.tempName, selectedSubject.tempColor, selectedSubject.tempDegree, selectedSubject.tempCategory, true);\n        setTimeTable(manager.GetTimeTable(prop.semester));\n    }\n\n    const RegisterExistingSubject = () =>{\n        if(selectedSubject.tempName == null || selectedSubject.tempName === \"\") {\n            alert(\"登録する科目が選択されていません\");\n            return ;\n        }\n        manager.RegisterSubject(prop.semester, selectedSubject.id, selectedSubject.tempName, selectedSubject.tempColor, selectedSubject.tempDegree, selectedSubject.tempCategory, false);\n        setTimeTable(manager.GetTimeTable(prop.semester));\n    }\n\n\n    return <div className=\"Form\">\n        <h3>{headers[selectedSubject.id%10]}曜日{Math.floor(selectedSubject.id/10)+1}限目</h3>\n        <form>\n            {selectedSubject.isRegistered\n                ? null\n                : (<div>\n                    <input  type=\"radio\" name=\"selectOption\" value=\"new\" onChange={onChanged} checked={selectedSubject.selectOption === \"new\"}/>新しく科目を作成して登録<br />\n                    <input  type=\"radio\" value=\"existing\" name=\"selectOption\" onChange={onChanged} checked={selectedSubject.selectOption === \"existing\"} />既存の科目を登録\n                </div>)\n            }\n            {selectedSubject.selectOption === \"existing\" && selectedSubject.isRegistered === false\n            ?\n                <select name=\"tempName\" onChange={onChanged} value={selectedSubject.tempName}>\n                    <option></option>\n                    {manager.GetSubjectList(prop.semester).map(key => key.SubjectName !== \"\"  ? <option>{key.SubjectName}</option> : null)}\n                </select>\n            :\n            <table className=\"FormTable\">\n                <thead>\n                    <tr>\n                        <th key={0}>教科名</th>\n                        <th key={1}><input type=\"text\"  key=\"inputName\" value={selectedSubject.tempName} name=\"tempName\" onChange={onChanged}/></th>\n                    </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th key={0}>単位</th>\n                    <th key={1}>\n                        <select  value={selectedSubject.tempDegree} name=\"tempDegree\" onChange={onChanged}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>10</option>\n                        </select>\n                    </th>\n                </tr>\n                <tr>\n                    <th key={0}>色</th>\n                    <th key={1}>\n                        <select value={selectedSubject.tempColor} name=\"tempColor\" onChange={onChanged}>\n                            <option></option>\n                            {Object.keys(colorList).map(key => <option key={key}>{key}</option>)}\n                        </select>\n                    </th>\n                </tr>\n                <tr>\n                    <th key={0}>区分</th>\n                    <th key={1}>\n                        <select value={selectedSubject.tempCategory} name=\"tempCategory\" onChange={onChanged}>\n                            {manager.Categories.map((value, idx) => value !==\"\" ? <option key={idx+1}>{value !== \"None\" ? value : null}</option> : null)}\n                        </select>\n                    </th>\n                </tr>\n                </tbody>\n            </table>\n            }\n        </form>\n    \n            {selectedSubject.isRegistered ?\n                (<div>\n                    <button onClick={onSubmit}>変更を保存</button>\n                    <button onClick={DeleteSubject}>削除</button>\n                    <button onClick={Clear}>クリア</button>\n                </div>)\n            : selectedSubject.selectOption === \"new\"\n                ?(<div>\n                    <button onClick={RegisterSubject}>新規登録</button>\n                    <button onClick={Clear}>クリア</button>\n                </div>)\n                :(\n                    <div>\n                        <button onClick={RegisterExistingSubject}>科目を登録</button>\n                    </div>\n                )\n            \n            }\n    </div>\n\n}\nexport default EditForm;","import Subject, { ECategory } from './Subject';\nimport { GetSubjects } from './JsonManager';\nimport SaveSubjects from './JsonManager';\nimport { colorList } from '../component/EditForm';\nimport { Console, debug, time } from 'console';\n\nconst defaultSub : Subject = new  Subject(\"\", [], \"white\", 2, ECategory.None);\nconst MAX_SEMESTER = 8;\n\nclass SubjectManager {\n    constructor () {\n        this.timeTable = GetSubjects();\n    }\n\n    // カテゴリー\n    get Categories() {\n        return this.categories.filter((key:any) => (typeof(ECategory[key]) === \"number\"));\n    }\n    private categories = Object.keys(ECategory);\n\n\n    // 科目のリストを取得\n    GetSubjectList(semester : number) :Subject[] {\n        var checeked = new Array<boolean>(this.timeTable.length);\n        return this.timeTable[semester-1].filter((item, idx)=>{\n            if(item === undefined || item === null) return false;\n            if(checeked[idx]) return false;\n            item?.Time?.forEach(time => checeked[time] = true);\n            return true;\n        });\n    };\n\n    // 単位数を計算\n    CountDegree(semester:number, countType:string) : number[] {\n        var list : number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        switch(countType) {     \n            case \"all\":\n                for(let i = 1; i <= MAX_SEMESTER; i++) {\n                    list = this.CountSemesterDegree(i, list);\n                }\n                break;\n            case \"semester\":\n                list = this.CountSemesterDegree(semester, list);\n                break;\n            case \"gotten\":\n                for(let i = 1; i < semester; i++) {\n                    list = this.CountSemesterDegree(i, list);\n                }\n                break;\n        }\n        return list;\n    }\n\n    private CountSemesterDegree(semester:number, list:number[]) {\n        let isRegistered = new Array<boolean>(this.timeTable[semester-1].length);\n        isRegistered = isRegistered.map(item => false);\n        this.timeTable[semester-1].forEach((subject, id) => {\n            if(subject != null && subject != undefined && !isRegistered[id] && subject.SubjectName !== \"\" ) {\n                subject.Time.forEach(time => {isRegistered[time] = true});\n                var str :string = ECategory[subject.Category];\n                list[parseInt(str)] += Number(subject.Degree);\n                if(parseInt(str) <= ECategory.専門その他) { list[list.length-1] = Number(list[list.length-1]) + Number(subject.Degree); }   // 専門科目なら合計に加える\n            }\n        });\n        return list;\n    }\n\n    // 時間割の取得\n    GetTimeTable(semester :number) :Subject[]  {\n        return this.timeTable[semester-1].slice(0, this.timeTable[semester-1].length);\n    }\n\n    // 科目の削除\n    DeleteSubject(semester:number, id:number ) {\n        if (this.timeTable[semester-1][id].Time.length > 1) {\n            this.timeTable[semester-1][id].ReduceTime(id);\n        }\n        this.timeTable[semester-1][id] = defaultSub;\n    }\n\n    // 科目情報の変更\n    ChangeSubject(semester:number, id:number, name:string, color:string, degree:number, category:ECategory) {\n        if(this.timeTable[semester-1][id].Time.length > 1 ) {\n            let ans = window.confirm(\"同じ授業の他の時間のデータも変更しますか？\");\n            if(ans === true) {\n                this.timeTable[semester-1][id].ChangeData(name, colorList[color], degree, category);\n            }\n            else {\n                this.timeTable[semester-1][id].ReduceTime(id);\n                this.timeTable[semester-1][id] = new Subject(name, [id], colorList[color], degree, category);\n            }\n        }\n        else {\n            this.timeTable[semester-1][id].ChangeData(name, colorList[color], degree, category);\n        }\n    }\n\n    RegisterSubject(semester: number, id: number, name:string, color:string, degree:number, category:ECategory, isNew: boolean) {\n        if (isNew) {\n            let table = this.timeTable[semester-1];\n            table[id] = new Subject(name, [id], colorList[color], degree, category);\n            this.timeTable.forEach(table => console.log(table[id]));\n        }\n        else {\n            const sub : (Subject | undefined) = this.timeTable[semester-1].find(x => x != undefined && x.SubjectName === name);\n            sub?.AddTime(id);\n            if(sub != undefined){\n                this.timeTable[semester-1][id] = sub;\n            }\n        }\n        this.SaveTimeTable();\n    }\n    private timeTable : Subject[][];\n\n    SaveTimeTable = () => {\n        SaveSubjects(this.timeTable);\n    }\n}\n\nexport default SubjectManager;","import React from 'react';\nimport Subject from \"../model/Subject\";\n\n\ninterface IProps {\n    subject : Subject | null | undefined\n};\n\n\nconst TableCell: React.VFC<IProps>= (props : IProps)=> {\n    const style = {\n        background: props.subject === undefined ?\"white\" : props.subject?.Color,\n        height :150\n    };\n    return (\n        <div className=\"Cell\"  style={style}>\n            {props.subject === undefined ? \"\" : props.subject?.SubjectName}\n        </div>\n    );\n}\n\nexport default TableCell;","\nimport React, {useEffect, useContext} from \"react\";\nimport Subject, { ECategory } from \"../model/Subject\";\nimport TableCell from \"./TimeTableCell\";\nimport { formContext, manager, semesterTabContext } from \"../App\";\nimport { MouseEvent } from \"react\";\nimport {toNameList} from \"./EditForm\";\n\nconst defaultSub : Subject = new  Subject(\"\", [], \"\", 2, ECategory.None);\nconst times = [1, 2, 3, 4, 5, 6];\nconst headers = [\"\",\"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"];\n\n\ninterface IProp {\n    semester : number\n}\n\nconst TimeTables: React.VFC<IProp> = (prop :IProp) => {\n    const {selectedSubject, setSubject, TimeTable, setTimeTable} = useContext(formContext);\n    const {Semester, setSemester} = useContext(semesterTabContext);\n    useEffect(\n        () => setTimeTable(manager.GetTimeTable(prop.semester)),\n        [Semester, setSemester]\n    );\n    // 選択されたコマのデータをフォームに登録\n    const setDataForm = (e :MouseEvent<HTMLElement>) =>{\n        let idstr = e.currentTarget.dataset.id as string;\n        let id = parseInt(idstr, 10);\n        // eslint-disable-next-line\n        if(TimeTable[id] != undefined && TimeTable[id].SubjectName !== \"\") {\n            setSubject({\n                id: id,\n                isRegistered: true,\n                tempColor : toNameList[TimeTable[id].Color],\n                tempName : TimeTable[id].SubjectName,\n                tempDegree  : TimeTable[id].Degree,\n                tempCategory: TimeTable[id].Category,\n                selectOption : \"new\",\n                canEdit : false,\n            });\n        }\n        else {      // 登録されていなければ\n            setSubject({\n                id: id,\n                isRegistered: false,\n                tempColor : \"\",\n                tempName : defaultSub.SubjectName,\n                tempDegree  : defaultSub.Degree,\n                tempCategory: defaultSub.Category,\n                selectOption : \"new\",\n                canEdit : true,\n            });\n        }\n    }\n\n    // 描画\n    return (\n        <table className=\"TimeTable\">\n            <thead>\n                <tr >\n                    {headers.map((head, idx) => {\n                        return <th key={idx}>{head}</th>\n                    })}\n                </tr>\n            </thead>\n            <tbody>\n            {times.map((time, idx1) =>{\n                return<tr key={idx1}>\n                    <th key={0}>{time}</th>\n                    {headers.map((data, idx2) => {\n                        if(idx2 === headers.length-1 ) return null;\n                        return <th  data-id={idx1*10+idx2} onClick={setDataForm} key={idx2+1}>\n                            <TableCell subject={TimeTable[idx1*10+idx2]} />\n                        </th>\n                    })}\n                </tr>\n            })}\n            </tbody>\n        </table>);\n};\nexport default TimeTables;","import React from \"react\";\nimport Subject, { ECategory, } from \"../model/Subject\";\nimport {manager} from \"../App\";\n\ninterface IProps {\n    subject : Subject[],\n    semester : number\n};\n\nconst Counter : React.VFC<IProps>  = (props :IProps) =>{\n    const [displayType, SetType] = React.useState(\"all\");\n    let counts = manager.CountDegree(props.semester, displayType);\n    const onChanged= (e :(React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLSelectElement>))=>{\n        SetType(e.target.name);\n    };\n    switch (displayType) {\n        case \"all\":\n            document.documentElement.style.setProperty(\"--counter-color\", \"#B384FF\");\n            break;\n        case \"semester\" :\n            document.documentElement.style.setProperty(\"--counter-color\", \"#FF82B2\");\n            break;\n        case \"gotten\":\n            document.documentElement.style.setProperty(\"--counter-color\", \"#5BFF7F\");\n            break;\n    }\n    \n    return <div className=\"tabs\">\n        <div>\n            <input className=\"tab\" type=\"radio\" name=\"all\" id=\"all\" checked={displayType === \"all\"} onChange={onChanged}/>\n                <label htmlFor=\"all\" className=\"tab_item\" >合計</label> \n            <input className=\"tab\" id=\"semester\" type=\"radio\" name=\"semester\" checked={displayType === \"semester\"} onChange={onChanged}/>\n                <label htmlFor=\"semester\" className=\"tab_item\" >今学期</label> \n            <input className=\"tab\"  id=\"gotten\" type=\"radio\" name=\"gotten\" checked={displayType === \"gotten\"} onChange={onChanged}/>\n                <label htmlFor=\"gotten\" className=\"tab_item\" >前学期まで</label> \n        </div>\n\n        <div className=\"tab_content\">\n                <table className=\"DegreeCounter\">\n                    <thead>\n                        <tr>\n                            {counts.map((count, idx) => idx > 0 ? <th key={idx}>{idx !== counts.length-1 ? ECategory[idx] : \"専門合計\"}</th> : null)}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            {counts.map((count, idx) => idx > 0 ? <th key={idx}>{count}</th> : null) }\n                        </tr>\n                    </tbody>\n                </table>\n        </div>\n    </div>;\n}; \nexport default Counter;","import React, {useContext} from \"react\";\nimport { semesterTabContext } from \"../App\";\n\nconst semesters = [1, 2, 3, 4, 5, 6, 7, 8];\nconst selectedStyle = {\n    background : \"#5ab4bd\",\n    color : \"black\"\n}\nconst defaultStyle = {\n    backgroud : \"#d9d9d9\",\n    color : \"#565656\"\n}\n\nexport const SemesterTab : React.VFC = () =>{\n    const {Semester, setSemester} = useContext(semesterTabContext);\n    const onChanged = (e :(React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLSelectElement>)) => {\n        setSemester(parseInt(e.target.value));\n    }\n    return <div>\n        {semesters.map(seme => \n            <input type=\"radio\" checked={seme === Semester} value={seme} id={seme.toString()} className=\"tab\" onChange={onChanged} key={seme}/>\n        )}\n        {semesters.map(seme => <label htmlFor={seme.toString()} className=\"semester_tab_item\" key={seme} style={seme == Semester ? selectedStyle : defaultStyle}>{seme}セメ</label>)}\n    </div>\n}","export const Title :React.FC = () => {\n    return <div className=\"TitleContainer\">\n        <h1>阪大単位計算時間割アプリ</h1>\n        <div>\n            <p>時間割に科目を登録することで、自動で単位を計算し表示してくれるアプリです。</p>\n            <p>このアプリの利用者は阪大生を想定しております。<br />\n                集中講義にはまだ対応しておりません。<br />\n                また落単にも対応しておりません。(落単する人なんていないですよね？)\n            </p>\n            <p><strong>\n            本システムの利用に伴い、直接的ないしは間接的に生じた損失等に対し、本システム及び製作者は責任を負いません。<br />\n            本システムを利用したことにより生じる結果は全て使用者自身の責任と負担となります。<br />\n            自己責任でご利用ください。\n            </strong></p>\n            <p>単位の計算はブラウザ上で行われ、利用者様の情報がサーバーに送信されることはございません。</p>\n        </div>\n        <div>\n            <p>ご連絡・ご質問・不具合報告等はTwitter(@kakikaki85)またはMail(u097498f[at]ecs.osaka-u.ac.jp)までお願いします。</p>\n        </div>\n    </div>\n}","import React, {useState} from 'react';\nimport './App.css';\nimport Subject, {ECategory} from \"./model/Subject\";\nimport SubjectManager from './model/SubjectsManager';\nimport TimeTables from './component/TimeTable';\nimport EditForm from \"./component/EditForm\";\nimport Counter from \"./component/Counter\";\nimport { SemesterTab } from './component/semsterTab';\nimport {Title} from \"./component/Title\";\n\n\ninterface IFormInfo {\n  id: number;\n  isRegistered: boolean;\n  tempColor: string;\n  tempName: string;\n  tempDegree: number;\n  tempCategory: ECategory ;\n  selectOption: string;\n  canEdit : boolean;\n}\n\n\nexport const formContext = React.createContext({} as {\n  selectedSubject :IFormInfo\n  setSubject : React.Dispatch<React.SetStateAction<IFormInfo>>,\n  TimeTable : Subject[],\n  setTimeTable : React.Dispatch<React.SetStateAction<Subject[]>>\n});\nexport const semesterTabContext = React.createContext({} as {\n  Semester : number,\n  setSemester : React.Dispatch<React.SetStateAction<number> >\n})\n\nexport const manager = new SubjectManager();\n\nconst handleBeforeUnload = (e :any) =>{\n  manager.SaveTimeTable();\n}\nwindow.addEventListener('beforeunload', handleBeforeUnload);\nfunction App() {\n  const [Semester, setSemester] = useState(1);\n  const [TimeTable, setTimeTable] = useState(manager.GetTimeTable(Semester));\n  let registered = TimeTable.length > 0 && TimeTable[0] != null  && TimeTable[0].SubjectName !== \"\";\n  const [selectedSubject, setSubject] = useState({\n        id : 0,\n        isRegistered: registered,\n        tempColor: \"\",\n        tempName: \"\",\n        tempDegree : 2,\n        tempCategory : ECategory.None,\n        selectOption: \"new\",\n        canEdit : true,\n    });\n    const formValue = {\n        selectedSubject,\n        setSubject,\n        TimeTable,\n        setTimeTable,\n    };\n\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <formContext.Provider value={formValue}>\n      <semesterTabContext.Provider value={{Semester, setSemester}} >\n\n        <div className='TableContainer' >\n            <SemesterTab />\n          <TimeTables semester={Semester}/>\n        </div>\n        <div className=\"FormContainer\">\n          <EditForm semester={Semester}/>\n          <Counter subject={TimeTable} semester={Semester}/>\n        </div>\n      </semesterTabContext.Provider>\n      </formContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from \"react\";\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport TimeTable from \"./component/TimeTable\";\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}